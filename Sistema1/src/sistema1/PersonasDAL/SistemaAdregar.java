/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema1.PersonasDAL;

import java.sql.Date;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sistema1.PersonaBL.CasosC;
import sistema1.PersonaGUI.ConexioBaseDatos;

/**
 *
 * @author Hector Murillo
 */
public class SistemaAdregar extends javax.swing.JFrame {

    DefaultTableModel modelo;

    /**
     * Creates new form SistemaAdregar
     */
    /**
     * Constructor Aqui inicializamos el modelo de la tabla para que esta tenga
     * nuestro titulos deseados
     */
    public SistemaAdregar() {
        initComponents();
        //titulos de la tabla 
        String[] titulos = {"Id", "Dia", "Nuevos", "Fallecidos", "Recuperados",
            "TotalConfirmados", "TotalRecuperados", "TotalActivos"};

        modelo = new DefaultTableModel(null, titulos);
        //agregamos nuestros titulos a la tabla 
        tblPersonas.setModel(modelo);
        this.mostrarDatos();
        this.limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonas = new javax.swing.JTable();
        btnAdregar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtFallecidos = new javax.swing.JTextField();
        txtNuevos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRecuperados = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtConfirmados = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPersonas);

        btnAdregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistema1/Recursos/agregar-usuario.png"))); // NOI18N
        btnAdregar.setText("Agregar");
        btnAdregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdregarActionPerformed(evt);
            }
        });

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistema1/Recursos/borrar (1).png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistema1/Recursos/boton-eliminar (1).png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nuevos:");

        jLabel4.setText("Fallecidos:");

        jLabel5.setText("Recuperados:");

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistema1/Recursos/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 153));
        jLabel6.setText("registro de casos covid");

        jLabel7.setText("Confirmados:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(180, 180, 180)
                                .addComponent(txtFecha)
                                .addGap(81, 81, 81))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdregar)
                                .addGap(27, 27, 27)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRecuperados, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFallecidos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNuevos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConfirmados, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(237, 237, 237))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(txtConfirmados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNuevos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(txtFallecidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRecuperados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdregar)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCancelar)
                                .addComponent(btnBorrar)
                                .addComponent(btnEditar)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Boton agregar, agrega datos a la base de datos y los muestra en un jtable
     *
     * @param evt evento clicked
     */
    private void btnAdregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdregarActionPerformed

        // captura los datos que hemos ingresado 
        CasosC casosN = recuperarDatosGUI();
        //hacemos una conexion a la base de datos
        ConexioBaseDatos objConecxion = new ConexioBaseDatos();
        // en un string capturamos la sentencia sql con los datos a ingresar 
        //en la base de datos
        String strSentenciaInsert = String.format("INSERT INTO Casos (NUEVOS, "
                + "Fallecidos, RECUPERADOS, ACTIVOS) "
                + "VALUES ('%s', '%s', '%s', '%s')",
                casosN.getNuevos(),
                casosN.getFallecidos(),
                casosN.getRecuperados(),
                casosN.getActivos());

        // ahora solo ejecutamos la sentencia sql que previamente llenamos 
        //condatos 
        objConecxion.ejecutarSentenciaSQl(strSentenciaInsert);
        //actualizamos la tabla para que se muestren los datos de la base de datos
        this.mostrarDatos();
        //limpia los campos una vez realizada las operaciones anteriores
        this.limpiar();
    }//GEN-LAST:event_btnAdregarActionPerformed
    /**
     * Al hacer click en alguna fila de la tabla, los valores de esa fila
     * pasaran respectivamente a los campos de ingreso para poder ser eliminados
     * o editados
     *
     * @param evt
     */
    private void tblPersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonasMouseClicked

        //aqui preguntamos si ClicCount es igual a 1
        if (evt.getClickCount() == 1) {
            //Capturamos el origen de los datos 
            JTable receptor = (JTable) evt.getSource();
            //fecha se encuentra en la columna 1
            txtFecha.setText((receptor.getModel().getValueAt(
                    receptor.getSelectedRow(), 1).toString()));
            //nuevos se encuentra en la columna 2
            txtNuevos.setText(receptor.getModel().getValueAt(
                    receptor.getSelectedRow(), 2).toString());
            //fallecidos se encuentra en la columna 3
            txtFallecidos.setText(receptor.getModel().getValueAt(
                    receptor.getSelectedRow(), 3).toString());
            //recuperados se encuentra en la columna 4
            txtRecuperados.setText(receptor.getModel().getValueAt(
                    receptor.getSelectedRow(), 4).toString());
            //confirmados se encuentran en la columna 5
            txtConfirmados.setText(receptor.getModel().getValueAt(
                    receptor.getSelectedRow(), 5).toString());

        }
        //impide que se agregre otra vez el elemento seleccionado
        btnAdregar.setEnabled(false);
        //el elemento seleccionado puede ser borrado
        btnBorrar.setEnabled(true);
        //el elemento seleccionado puede ser editado
        btnEditar.setEnabled(true);

    }//GEN-LAST:event_tblPersonasMouseClicked
    /**
     * boton borrar, borra los datos de la base de datos segun id
     *
     * @param evt
     */
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

        //se capturan los datos que se estan ingresando
        //CasosC casosW = recuperarDatosGUI();
        //se captura la fila con el metodo getselectedrow()
        int fila = tblPersonas.getSelectedRow();
        //id se optine de la fila selecionada y la columna que es 0 
        int id = Integer.parseInt((String) tblPersonas.getValueAt(fila, 0).toString());
        //hacemos una nueva conexion a la base de datos 
        ConexioBaseDatos objConecxion = new ConexioBaseDatos();
        //en una cadena capturamos la sentencia SQL que eliminara segun el id 
        String strSentenciaBorrar = String.format("DELETE FROM Casos WHERE ID=" + id);
        // ahora solo ejecutamos la sentencia sql
        objConecxion.ejecutarSentenciaSQl(strSentenciaBorrar);
        //actualizamos la tabla para observar que el dato se a elimando 
        this.mostrarDatos();
        //limpia los campos una vez realizadas las operaciones 
        this.limpiar();

    }//GEN-LAST:event_btnBorrarActionPerformed
    /**
     * Boton editar, edita los datos de la base de datos segun id
     *
     * @param evt
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        //capturamos los datos que estan por ingresarse
        CasosC casosE = recuperarDatosGUI();
        //Capturamos la fila seleccionada
        int fila = tblPersonas.getSelectedRow();
        //para encontrar el id capturamos en valor en la fila seleccionada
        //y la columna 0
        int id = Integer.parseInt((String) tblPersonas.getValueAt(fila, 0).toString());
        //Hacemos la conexion a la base de datos
        ConexioBaseDatos objConecxion = new ConexioBaseDatos();
        // En una cadena capturamos la sentencia SQL con los nuevos datos 
        String strSentenciaInsert = String.format("UPDATE Casos SET NUEVOS='%s', "
                + "Fallecidos='%s', "
                + "RECUPERADOS='%s', "
                + "ACTIVOS='%s' WHERE ID =" + id,
                casosE.getNuevos(),
                casosE.getFallecidos(),
                casosE.getRecuperados(),
                casosE.getActivos());

        // ahora solo ejecutamos nuestra sentencia SQL
        objConecxion.ejecutarSentenciaSQl(strSentenciaInsert);
        // actualizamos los datos en la tabla 
        this.mostrarDatos();
        //limpiamos los campos de insercion de datos
        this.limpiar();

    }//GEN-LAST:event_btnEditarActionPerformed
    /**
     * boton cancelar,
     * limpia los campos y resetea nuevamente los botones
     * @param evt 
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //metodo que limpia los datos 
        this.limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed
    
    /**
     * Metodo mostrar...
     */
    public void mostrarDatos() {
        //nos permite actualizar el jtable cuando ya no quedan mas datos
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        //hacemos una conexion a la base de datos
        ConexioBaseDatos objConecxion = new ConexioBaseDatos();
        //try..
        try {
            //en una cadena escribimos nuestra sentencia SQL
            ResultSet resultado = objConecxion.consularRegistro("SELECT * FROM Casos");
            //ejecutaremos para cada registro(fila)
            while (resultado.next()) {
                //capturamos los datos
                String id = resultado.getString("Id");
                String dia = resultado.getString("Dia");
                String nuevos = resultado.getString("Nuevos");
                String fallecidos = resultado.getString("Fallecidos");
                String recuperados = resultado.getString("Recuperados");
                String confirmados = resultado.getString("Activos");
                //total de activos es una ecuacion simple...
                String totalActivos = String.valueOf(Integer.parseInt(nuevos) - Integer.parseInt(fallecidos) - Integer.parseInt(recuperados));
                //Capturamos todos los datos en un array de objetos 
                Object[] array = {resultado.getString("Id"), resultado.getString("Dia"),
                    resultado.getString("Nuevos"),
                    resultado.getString("Fallecidos"),
                    resultado.getString("Recuperados"),
                    resultado.getString("Activos"),
                    recuperados,
                    totalActivos};
                //agregamos cada fila 
                modelo.addRow(array);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    /**
     * captura los datos que hemos escrito en los txtfield
     * @return los un objeto casoC con los valores que escribimos en los txt
     */
    public CasosC recuperarDatosGUI() {
        //instancia de casoc
        CasosC casosP = new CasosC();
        //Captura los datos que esten en los txtfield
        casosP.setId(0);
        casosP.setDia("");
        casosP.setNuevos(txtNuevos.getText());
        casosP.setFallecidos(txtFallecidos.getText());
        casosP.setRecuperados(txtRecuperados.getText());
        casosP.setActivos(txtConfirmados.getText());
        return casosP;
    }

    /**
     * metodo que limpia los valores del txtfield
     */
    public void limpiar() {
        //limpia todos los campos 
        txtNuevos.setText("");
        txtFallecidos.setText("");
        txtRecuperados.setText("");
        txtConfirmados.setText("");
        txtFecha.setText("");
        //activa el boton agregar
        btnAdregar.setEnabled(true);
        //desactiva los botones eliminar y editar
        btnBorrar.setEnabled(false);
        btnEditar.setEnabled(false);

    }

    /**
     * @param args the command lite arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaAdregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaAdregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaAdregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaAdregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SistemaAdregar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPersonas;
    private javax.swing.JTextField txtConfirmados;
    private javax.swing.JTextField txtFallecidos;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNuevos;
    private javax.swing.JTextField txtRecuperados;
    // End of variables declaration//GEN-END:variables
}
